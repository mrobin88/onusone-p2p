name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'
  NPM_VERSION: '9'

jobs:
  # Shared library build and test
  shared:
    name: Build & Test Shared Library
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: shared/package-lock.json

      - name: Install shared dependencies
        working-directory: ./shared
        run: npm ci

      - name: Build shared library
        working-directory: ./shared
        run: npm run build

      - name: Run shared tests
        working-directory: ./shared
        run: npm test --if-present

  # Node backend build and test
  node:
    name: Build & Test Node Backend
    runs-on: ubuntu-latest
    needs: shared
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: node/package-lock.json

      - name: Install shared dependencies
        working-directory: ./shared
        run: npm ci

      - name: Build shared library
        working-directory: ./shared
        run: npm run build

      - name: Install node dependencies
        working-directory: ./node
        run: npm ci

      - name: Build node
        working-directory: ./node
        run: npm run build --if-present

      - name: Run node tests
        working-directory: ./node
        run: npm test --if-present

      - name: Lint node code
        working-directory: ./node
        run: npm run lint --if-present

  # Frontend build and test
  frontend:
    name: Build & Test Frontend
    runs-on: ubuntu-latest
    needs: shared
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install shared dependencies
        working-directory: ./shared
        run: npm ci

      - name: Build shared library
        working-directory: ./shared
        run: npm run build

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Run frontend tests
        working-directory: ./frontend
        run: npm test --if-present

      - name: Lint frontend code
        working-directory: ./frontend
        run: npm run lint --if-present

  # Integration tests
  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [shared, node, frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install all dependencies
        run: |
          cd shared && npm ci && npm run build
          cd ../node && npm ci
          cd ../frontend && npm ci

      - name: Start node server
        working-directory: ./node
        run: |
          npm run build --if-present
          timeout 30s npm run dev &
          sleep 10

      - name: Test API endpoints
        run: |
          curl -f http://localhost:8888/health || exit 1
          curl -f http://localhost:8888/api/node || exit 1

      - name: Start frontend
        working-directory: ./frontend
        run: |
          npm run build
          timeout 30s npm run dev &
          sleep 10

      - name: Test frontend
        run: |
          curl -f http://localhost:3000 || exit 1

  # Security audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: |
          cd shared && npm ci
          cd ../node && npm ci
          cd ../frontend && npm ci

      - name: Run security audit
        run: |
          cd shared && npm audit --audit-level=moderate
          cd ../node && npm audit --audit-level=moderate
          cd ../frontend && npm audit --audit-level=moderate

  # Code quality
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: |
          cd shared && npm ci
          cd ../node && npm ci
          cd ../frontend && npm ci

      - name: Check TypeScript compilation
        run: |
          cd shared && npm run build
          cd ../node && npm run build --if-present
          cd ../frontend && npm run build

      - name: Check for console.log statements
        run: |
          if grep -r "console\.log" shared/src node/src frontend/src --exclude="*.test.*" --exclude="*.spec.*"; then
            echo "Found console.log statements in source code"
            exit 1
          fi

      - name: Check for TODO comments
        run: |
          if grep -r "TODO:" shared/src node/src frontend/src --exclude="*.test.*" --exclude="*.spec.*"; then
            echo "Found TODO comments in source code"
            exit 1
          fi 